drop schema if exists techbd_udi cascade;
create schema if not exists techbd_udi;


SET search_path TO "techbd_udi";

CREATE TABLE IF NOT EXISTS "hub_device" (
    "hub_device_id" TEXT PRIMARY KEY NOT NULL,
    "key" TEXT NOT NULL,
    "created_at" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT NOT NULL,
    "provenance" TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS "sat_device_device" (
    "sat_device_device_id" TEXT PRIMARY KEY NOT NULL,
    "hub_device_id" TEXT NOT NULL,
    "name" TEXT NOT NULL,
    "state" TEXT NOT NULL,
    "boundary" TEXT NOT NULL,
    "segmentation" TEXT,
    "state_sysinfo" TEXT,
    "elaboration" JSONB,
    "created_at" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT NOT NULL,
    "provenance" TEXT NOT NULL,
    FOREIGN KEY("hub_device_id") REFERENCES "hub_device"("hub_device_id")
);

CREATE TABLE IF NOT EXISTS "hub_request_http_client" (
    "hub_request_http_client_id" TEXT PRIMARY KEY NOT NULL,
    "key" TEXT NOT NULL,
    "created_at" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT NOT NULL,
    "provenance" TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS "sat_request_http_client_meta_data" (
    "sat_request_http_client_meta_data_id" TEXT PRIMARY KEY NOT NULL,
    "hub_request_http_client_id" TEXT NOT NULL,
    "request_payload" JSONB,
    "elaboration" JSONB,
    "created_at" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT NOT NULL,
    "provenance" TEXT NOT NULL,
    FOREIGN KEY("hub_request_http_client_id") REFERENCES "hub_request_http_client"("hub_request_http_client_id")
);

CREATE TABLE IF NOT EXISTS "hub_ingest_session" (
    "hub_ingest_session_id" TEXT PRIMARY KEY NOT NULL,
    "key" TEXT NOT NULL,
    "created_at" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT NOT NULL,
    "provenance" TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS "hub_ingest_session_entry" (
    "hub_ingest_session_entry_id" TEXT PRIMARY KEY NOT NULL,
    "key" TEXT NOT NULL,
    "created_at" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT NOT NULL,
    "provenance" TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS "sat_ingest_session_meta_data" (
    "sat_ingest_session_meta_data_id" TEXT PRIMARY KEY NOT NULL,
    "hub_ingest_session_id" TEXT NOT NULL,
    "device_id" TEXT NOT NULL,
    "version" TEXT NOT NULL,
    "orch_started_at" DATE NOT NULL,
    "orch_finished_at" DATE NOT NULL,
    "qe_identifier" TEXT NOT NULL,
    "content_hash" TEXT NOT NULL,
    "args_json" JSONB,
    "diagnostics_json" JSONB,
    "diagnostics_md" TEXT,
    "elaboration" JSONB,
    "created_at" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT NOT NULL,
    "provenance" TEXT NOT NULL,
    FOREIGN KEY("hub_ingest_session_id") REFERENCES "hub_ingest_session"("hub_ingest_session_id")
);

CREATE TABLE IF NOT EXISTS "sat_ingest_session_entry_payload" (
    "sat_ingest_session_entry_payload_id" TEXT PRIMARY KEY NOT NULL,
    "hub_ingest_session_entry_id" TEXT NOT NULL,
    "ingest_src" TEXT NOT NULL,
    "ingest_table_name" TEXT,
    "ingest_payload" JSONB,
    "elaboration" JSONB,
    "created_at" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT NOT NULL,
    "provenance" TEXT NOT NULL,
    FOREIGN KEY("hub_ingest_session_entry_id") REFERENCES "hub_ingest_session_entry"("hub_ingest_session_entry_id")
);

CREATE TABLE IF NOT EXISTS "sat_ingest_session_entry_session_state" (
    "sat_ingest_session_entry_session_state_id" TEXT PRIMARY KEY NOT NULL,
    "hub_ingest_session_entry_id" TEXT NOT NULL,
    "from_state" TEXT NOT NULL,
    "to_state" TEXT NOT NULL,
    "transition_result" TEXT,
    "transition_reason" TEXT,
    "elaboration" JSONB,
    "created_at" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT NOT NULL,
    "provenance" TEXT NOT NULL,
    FOREIGN KEY("hub_ingest_session_entry_id") REFERENCES "hub_ingest_session_entry"("hub_ingest_session_entry_id")
);

CREATE TABLE IF NOT EXISTS "sat_ingest_session_entry_session_exec" (
    "sat_ingest_session_entry_session_exec_id" TEXT PRIMARY KEY NOT NULL,
    "hub_ingest_session_entry_id" TEXT NOT NULL,
    "exec_nature" TEXT NOT NULL,
    "parent_exec_id" TEXT,
    "namespace" TEXT,
    "exec_identity" TEXT,
    "exec_code" TEXT NOT NULL,
    "exec_status" INTEGER NOT NULL,
    "input_text" TEXT,
    "exec_error_text" TEXT,
    "output_text" TEXT,
    "output_nature" TEXT,
    "narrative_md" TEXT,
    "elaboration" JSONB,
    "created_at" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT NOT NULL,
    "provenance" TEXT NOT NULL,
    FOREIGN KEY("hub_ingest_session_entry_id") REFERENCES "hub_ingest_session_entry"("hub_ingest_session_entry_id")
);

CREATE TABLE IF NOT EXISTS "sat_ingest_session_entry_session_issue" (
    "sat_ingest_session_entry_session_issue_id" TEXT PRIMARY KEY NOT NULL,
    "hub_ingest_session_entry_id" TEXT NOT NULL,
    "issue_type" TEXT NOT NULL,
    "issue_message" TEXT NOT NULL,
    "level" TEXT NOT NULL,
    "issue_column" INTEGER,
    "issue_row" INTEGER,
    "message_id" TEXT,
    "ignorableError" BOOLEAN NOT NULL DEFAULT false,
    "invalid_value" TEXT,
    "comment" TEXT,
    "display" TEXT,
    "disposition" TEXT,
    "remediation" TEXT,
    "validation_engine_payload" JSONB,
    "elaboration" JSONB,
    "created_at" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT NOT NULL,
    "provenance" TEXT NOT NULL,
    FOREIGN KEY("hub_ingest_session_entry_id") REFERENCES "hub_ingest_session_entry"("hub_ingest_session_entry_id")
);

CREATE TABLE IF NOT EXISTS "link_session_request" (
    "link_session_request_id" TEXT PRIMARY KEY NOT NULL,
    "hub_ingest_session_id" TEXT NOT NULL,
    "hub_request_http_client_id" TEXT NOT NULL,
    "created_at" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT NOT NULL,
    "provenance" TEXT NOT NULL,
    FOREIGN KEY("hub_ingest_session_id") REFERENCES "hub_ingest_session"("hub_ingest_session_id"),
    FOREIGN KEY("hub_request_http_client_id") REFERENCES "hub_request_http_client"("hub_request_http_client_id")
);

CREATE TABLE IF NOT EXISTS "link_session_entry" (
    "link_session_entry_id" TEXT PRIMARY KEY NOT NULL,
    "hub_ingest_session_id" TEXT NOT NULL,
    "hub_ingest_session_entry_id" TEXT NOT NULL,
    "created_at" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT NOT NULL,
    "provenance" TEXT NOT NULL,
    FOREIGN KEY("hub_ingest_session_id") REFERENCES "hub_ingest_session"("hub_ingest_session_id"),
    FOREIGN KEY("hub_ingest_session_entry_id") REFERENCES "hub_ingest_session_entry"("hub_ingest_session_entry_id")
);

CREATE TABLE IF NOT EXISTS "link_session_device" (
    "link_session_device_id" TEXT PRIMARY KEY NOT NULL,
    "hub_ingest_session_id" TEXT NOT NULL,
    "hub_device_id" TEXT NOT NULL,
    "created_at" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT NOT NULL,
    "provenance" TEXT NOT NULL,
    FOREIGN KEY("hub_ingest_session_id") REFERENCES "hub_ingest_session"("hub_ingest_session_id"),
    FOREIGN KEY("hub_device_id") REFERENCES "hub_device"("hub_device_id")
);

CREATE TABLE IF NOT EXISTS "hub_exception" (
    "hub_exception_id" TEXT PRIMARY KEY NOT NULL,
    "key" TEXT,
    "created_at" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT NOT NULL,
    "provenance" TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS "sat_exception_diagnostics" (
    "sat_exception_diagnostics_id" TEXT PRIMARY KEY NOT NULL,
    "hub_exception_id" TEXT NOT NULL,
    "message" TEXT NOT NULL,
    "err_returned_sqlstate" TEXT NOT NULL,
    "err_pg_exception_detail" TEXT NOT NULL,
    "err_pg_exception_hint" TEXT NOT NULL,
    "err_pg_exception_context" TEXT NOT NULL,
    "created_at" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT NOT NULL,
    "provenance" TEXT NOT NULL,
    FOREIGN KEY("hub_exception_id") REFERENCES "hub_exception"("hub_exception_id")
);

CREATE TABLE IF NOT EXISTS "sat_exception_http_client" (
    "sat_exception_http_client_id" TEXT PRIMARY KEY NOT NULL,
    "hub_exception_id" TEXT NOT NULL,
    "http_req" JSONB,
    "http_resp" JSONB,
    "elaboration" JSONB,
    "created_at" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT NOT NULL,
    "provenance" TEXT NOT NULL,
    FOREIGN KEY("hub_exception_id") REFERENCES "hub_exception"("hub_exception_id")
);

\ir udi-ingestion-center-stored-routines.psql

